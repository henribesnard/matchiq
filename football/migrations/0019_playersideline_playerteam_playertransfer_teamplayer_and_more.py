# Generated by Django 5.1.6 on 2025-02-18 15:01

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('football', '0018_remove_question_theme_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlayerSideline',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(help_text="Type d'indisponibilit√© (blessure ou suspension)", max_length=100)),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('update_by', models.CharField(default='manual', max_length=50)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTeam',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('update_by', models.CharField(default='manual', max_length=50)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-season__year'],
            },
        ),
        migrations.CreateModel(
            name='PlayerTransfer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(db_index=True)),
                ('type', models.CharField(blank=True, choices=[('Free', 'Free Transfer'), ('Loan', 'Loan'), ('Permanent', 'Permanent Transfer'), ('N/A', 'Not Available')], max_length=20, null=True)),
                ('update_by', models.CharField(default='manual', max_length=50)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TeamPlayer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.CharField(choices=[('GK', 'Goalkeeper'), ('DF', 'Defender'), ('MF', 'Midfielder'), ('FW', 'Forward')], db_index=True, max_length=20)),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('is_active', models.BooleanField(default=True, help_text="Indique si le joueur fait partie de l'effectif actif")),
                ('update_by', models.CharField(default='manual', max_length=50)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['position', 'number'],
            },
        ),
        migrations.CreateModel(
            name='TeamStatistics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('form', models.CharField(blank=True, max_length=100, null=True)),
                ('matches_played_home', models.PositiveSmallIntegerField(default=0)),
                ('matches_played_away', models.PositiveSmallIntegerField(default=0)),
                ('matches_played_total', models.PositiveSmallIntegerField(default=0)),
                ('wins_home', models.PositiveSmallIntegerField(default=0)),
                ('wins_away', models.PositiveSmallIntegerField(default=0)),
                ('wins_total', models.PositiveSmallIntegerField(default=0)),
                ('draws_home', models.PositiveSmallIntegerField(default=0)),
                ('draws_away', models.PositiveSmallIntegerField(default=0)),
                ('draws_total', models.PositiveSmallIntegerField(default=0)),
                ('losses_home', models.PositiveSmallIntegerField(default=0)),
                ('losses_away', models.PositiveSmallIntegerField(default=0)),
                ('losses_total', models.PositiveSmallIntegerField(default=0)),
                ('goals_for_home', models.PositiveSmallIntegerField(default=0)),
                ('goals_for_away', models.PositiveSmallIntegerField(default=0)),
                ('goals_for_total', models.PositiveSmallIntegerField(default=0)),
                ('goals_against_home', models.PositiveSmallIntegerField(default=0)),
                ('goals_against_away', models.PositiveSmallIntegerField(default=0)),
                ('goals_against_total', models.PositiveSmallIntegerField(default=0)),
                ('goals_for_average_home', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('goals_for_average_away', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('goals_for_average_total', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('goals_against_average_home', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('goals_against_average_away', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('goals_against_average_total', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('streak_wins', models.PositiveSmallIntegerField(default=0)),
                ('streak_draws', models.PositiveSmallIntegerField(default=0)),
                ('streak_losses', models.PositiveSmallIntegerField(default=0)),
                ('biggest_win_home', models.CharField(blank=True, max_length=10, null=True)),
                ('biggest_win_away', models.CharField(blank=True, max_length=10, null=True)),
                ('biggest_loss_home', models.CharField(blank=True, max_length=10, null=True)),
                ('biggest_loss_away', models.CharField(blank=True, max_length=10, null=True)),
                ('clean_sheets_home', models.PositiveSmallIntegerField(default=0)),
                ('clean_sheets_away', models.PositiveSmallIntegerField(default=0)),
                ('clean_sheets_total', models.PositiveSmallIntegerField(default=0)),
                ('failed_to_score_home', models.PositiveSmallIntegerField(default=0)),
                ('failed_to_score_away', models.PositiveSmallIntegerField(default=0)),
                ('failed_to_score_total', models.PositiveSmallIntegerField(default=0)),
                ('penalties_scored', models.PositiveSmallIntegerField(default=0)),
                ('penalties_missed', models.PositiveSmallIntegerField(default=0)),
                ('penalties_total', models.PositiveSmallIntegerField(default=0)),
                ('update_by', models.CharField(default='manual', max_length=50)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-season__year', 'team__name'],
            },
        ),
        migrations.RemoveConstraint(
            model_name='coach',
            name='coach_birth_date_past',
        ),
        migrations.RemoveConstraint(
            model_name='fixtureplayerstatistic',
            name='unique_fixture_player_stats',
        ),
        migrations.RemoveConstraint(
            model_name='playerstatistics',
            name='unique_player_fixture_stats',
        ),
        migrations.AlterField(
            model_name='fixturestatistic',
            name='stat_type',
            field=models.CharField(choices=[('shots_on_goal', 'Shots on Goal'), ('shots_off_goal', 'Shots off Goal'), ('shots_insidebox', 'Shots Inside Box'), ('shots_outsidebox', 'Shots Outside Box'), ('total_shots', 'Total Shots'), ('blocked_shots', 'Blocked Shots'), ('fouls', 'Fouls'), ('corner_kicks', 'Corner Kicks'), ('offsides', 'Offsides'), ('ball_possession', 'Ball Possession'), ('yellow_cards', 'Yellow Cards'), ('red_cards', 'Red Cards'), ('goalkeeper_saves', 'Goalkeeper Saves'), ('total_passes', 'Total Passes'), ('passes_accurate', 'Accurate Passes'), ('passes_percentage', 'Pass Percentage'), ('goals_prevented', 'Goals Prevented')], help_text='Type of statistic from API-Football', max_length=50),
        ),
        migrations.AlterField(
            model_name='fixturestatus',
            name='status_type',
            field=models.CharField(choices=[('scheduled', 'Scheduled'), ('in_play', 'In Play'), ('finished', 'Finished'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed'), ('abandoned', 'Abandoned'), ('not_played', 'Not Played')], db_index=True, max_length=20),
        ),
        migrations.AddConstraint(
            model_name='coach',
            constraint=models.CheckConstraint(condition=models.Q(('birth_date__lt', datetime.datetime(2025, 2, 18, 15, 1, 53, 387626, tzinfo=datetime.timezone.utc))), name='coach_birth_date_past'),
        ),
        migrations.AddConstraint(
            model_name='fixtureplayerstatistic',
            constraint=models.UniqueConstraint(fields=('fixture', 'player'), name='unique_fixture_player_statistics'),
        ),
        migrations.AddConstraint(
            model_name='playerstatistics',
            constraint=models.UniqueConstraint(fields=('player', 'fixture'), name='unique_player_fixture_statistics'),
        ),
        migrations.AddField(
            model_name='playersideline',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sidelines', to='football.player'),
        ),
        migrations.AddField(
            model_name='playerteam',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams_history', to='football.player'),
        ),
        migrations.AddField(
            model_name='playerteam',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.season'),
        ),
        migrations.AddField(
            model_name='playerteam',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_history', to='football.team'),
        ),
        migrations.AddField(
            model_name='playertransfer',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='football.player'),
        ),
        migrations.AddField(
            model_name='playertransfer',
            name='team_in',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_in', to='football.team'),
        ),
        migrations.AddField(
            model_name='playertransfer',
            name='team_out',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_out', to='football.team'),
        ),
        migrations.AddField(
            model_name='teamplayer',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_squad', to='football.player'),
        ),
        migrations.AddField(
            model_name='teamplayer',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='squad', to='football.team'),
        ),
        migrations.AddField(
            model_name='teamstatistics',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.league'),
        ),
        migrations.AddField(
            model_name='teamstatistics',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.season'),
        ),
        migrations.AddField(
            model_name='teamstatistics',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.team'),
        ),
        migrations.AddIndex(
            model_name='playersideline',
            index=models.Index(fields=['player', 'start_date'], name='football_pl_player__d5c0d7_idx'),
        ),
        migrations.AddIndex(
            model_name='playersideline',
            index=models.Index(fields=['player', 'end_date'], name='football_pl_player__c3d560_idx'),
        ),
        migrations.AddIndex(
            model_name='playersideline',
            index=models.Index(fields=['type'], name='football_pl_type_31829b_idx'),
        ),
        migrations.AddConstraint(
            model_name='playersideline',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__gte', models.F('start_date'))), name='sideline_end_after_start'),
        ),
        migrations.AlterUniqueTogether(
            name='playersideline',
            unique_together={('player', 'type', 'start_date')},
        ),
        migrations.AddIndex(
            model_name='playerteam',
            index=models.Index(fields=['player', 'team'], name='football_pl_player__bbde53_idx'),
        ),
        migrations.AddIndex(
            model_name='playerteam',
            index=models.Index(fields=['player', 'season'], name='football_pl_player__657d55_idx'),
        ),
        migrations.AddIndex(
            model_name='playerteam',
            index=models.Index(fields=['team', 'season'], name='football_pl_team_id_d1f77b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playerteam',
            unique_together={('player', 'team', 'season')},
        ),
        migrations.AddIndex(
            model_name='playertransfer',
            index=models.Index(fields=['player', 'date'], name='football_pl_player__040f31_idx'),
        ),
        migrations.AddIndex(
            model_name='playertransfer',
            index=models.Index(fields=['team_in', 'date'], name='football_pl_team_in_1c72f8_idx'),
        ),
        migrations.AddIndex(
            model_name='playertransfer',
            index=models.Index(fields=['team_out', 'date'], name='football_pl_team_ou_9341a1_idx'),
        ),
        migrations.AddIndex(
            model_name='playertransfer',
            index=models.Index(fields=['type'], name='football_pl_type_fd98df_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playertransfer',
            unique_together={('player', 'date')},
        ),
        migrations.AddIndex(
            model_name='teamplayer',
            index=models.Index(fields=['team', 'position'], name='football_te_team_id_06eccd_idx'),
        ),
        migrations.AddIndex(
            model_name='teamplayer',
            index=models.Index(fields=['team', 'is_active'], name='football_te_team_id_138d9f_idx'),
        ),
        migrations.AddIndex(
            model_name='teamplayer',
            index=models.Index(fields=['player', 'is_active'], name='football_te_player__e2d1e1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teamplayer',
            unique_together={('team', 'number', 'is_active'), ('team', 'player')},
        ),
        migrations.AddIndex(
            model_name='teamstatistics',
            index=models.Index(fields=['team', 'season'], name='football_te_team_id_44ad0d_idx'),
        ),
        migrations.AddIndex(
            model_name='teamstatistics',
            index=models.Index(fields=['league', 'season'], name='football_te_league__bfbf05_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teamstatistics',
            unique_together={('team', 'league', 'season')},
        ),
    ]
