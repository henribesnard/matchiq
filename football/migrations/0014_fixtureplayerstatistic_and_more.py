# Generated by Django 5.1.6 on 2025-02-11 12:49

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('football', '0013_remove_coach_coach_birth_date_past_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FixturePlayerStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes_played', models.PositiveSmallIntegerField()),
                ('position', models.CharField(choices=[('GK', 'Goalkeeper'), ('DF', 'Defender'), ('MF', 'Midfielder'), ('FW', 'Forward')], max_length=2)),
                ('number', models.PositiveSmallIntegerField()),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('is_captain', models.BooleanField(default=False)),
                ('is_substitute', models.BooleanField(default=False)),
                ('shots_total', models.PositiveSmallIntegerField(default=0)),
                ('shots_on_target', models.PositiveSmallIntegerField(default=0)),
                ('goals_scored', models.PositiveSmallIntegerField(default=0)),
                ('goals_conceded', models.PositiveSmallIntegerField(default=0)),
                ('assists', models.PositiveSmallIntegerField(default=0)),
                ('saves', models.PositiveSmallIntegerField(default=0)),
                ('passes_total', models.PositiveSmallIntegerField(default=0)),
                ('passes_key', models.PositiveSmallIntegerField(default=0)),
                ('passes_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tackles_total', models.PositiveSmallIntegerField(default=0)),
                ('blocks', models.PositiveSmallIntegerField(default=0)),
                ('interceptions', models.PositiveSmallIntegerField(default=0)),
                ('duels_total', models.PositiveSmallIntegerField(default=0)),
                ('duels_won', models.PositiveSmallIntegerField(default=0)),
                ('dribbles_attempts', models.PositiveSmallIntegerField(default=0)),
                ('dribbles_success', models.PositiveSmallIntegerField(default=0)),
                ('dribbles_past', models.PositiveSmallIntegerField(default=0)),
                ('fouls_drawn', models.PositiveSmallIntegerField(default=0)),
                ('fouls_committed', models.PositiveSmallIntegerField(default=0)),
                ('yellow_cards', models.PositiveSmallIntegerField(default=0)),
                ('red_cards', models.PositiveSmallIntegerField(default=0)),
                ('penalties_won', models.PositiveSmallIntegerField(default=0)),
                ('penalties_committed', models.PositiveSmallIntegerField(default=0)),
                ('penalties_scored', models.PositiveSmallIntegerField(default=0)),
                ('penalties_missed', models.PositiveSmallIntegerField(default=0)),
                ('penalties_saved', models.PositiveSmallIntegerField(default=0)),
                ('offsides', models.PositiveSmallIntegerField(default=0)),
                ('update_by', models.CharField(default='manual', max_length=50)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='coach',
            name='coach_birth_date_past',
        ),
        migrations.AddConstraint(
            model_name='coach',
            constraint=models.CheckConstraint(condition=models.Q(('birth_date__lt', datetime.datetime(2025, 2, 11, 12, 49, 57, 338343, tzinfo=datetime.timezone.utc))), name='coach_birth_date_past'),
        ),
        migrations.AddField(
            model_name='fixtureplayerstatistic',
            name='fixture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.fixture'),
        ),
        migrations.AddField(
            model_name='fixtureplayerstatistic',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.player'),
        ),
        migrations.AddField(
            model_name='fixtureplayerstatistic',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.team'),
        ),
        migrations.AddIndex(
            model_name='fixtureplayerstatistic',
            index=models.Index(fields=['fixture', 'player'], name='football_fi_fixture_11e670_idx'),
        ),
        migrations.AddIndex(
            model_name='fixtureplayerstatistic',
            index=models.Index(fields=['fixture', 'team'], name='football_fi_fixture_df4067_idx'),
        ),
        migrations.AddIndex(
            model_name='fixtureplayerstatistic',
            index=models.Index(fields=['player', 'team'], name='football_fi_player__bc1dfa_idx'),
        ),
        migrations.AddIndex(
            model_name='fixtureplayerstatistic',
            index=models.Index(fields=['rating'], name='football_fi_rating_22fe54_idx'),
        ),
        migrations.AddConstraint(
            model_name='fixtureplayerstatistic',
            constraint=models.UniqueConstraint(fields=('fixture', 'player'), name='unique_fixture_player_stats'),
        ),
        migrations.AddConstraint(
            model_name='fixtureplayerstatistic',
            constraint=models.CheckConstraint(condition=models.Q(('shots_on_target__lte', models.F('shots_total'))), name='shots_on_target_lte_total_fixture'),
        ),
        migrations.AddConstraint(
            model_name='fixtureplayerstatistic',
            constraint=models.CheckConstraint(condition=models.Q(('duels_won__lte', models.F('duels_total'))), name='duels_won_lte_total_fixture'),
        ),
        migrations.AddConstraint(
            model_name='fixtureplayerstatistic',
            constraint=models.CheckConstraint(condition=models.Q(('dribbles_success__lte', models.F('dribbles_attempts'))), name='dribbles_success_lte_attempts_fixture'),
        ),
    ]
